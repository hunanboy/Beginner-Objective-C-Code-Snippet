#pragma mark - FRC delegate methods
     - (void)controllerWillChangeContent:(NSFetchedResultsController *)controller
     {
         // The fetch controller is about to start sending change notifications, so prepare the table view for updates.
         [self.tableView beginUpdates];
     }
    
    
     - (void)controller:(NSFetchedResultsController *)controller didChangeObject:(id)anObject atIndexPath:(NSIndexPath *)indexPath forChangeType:(NSFetchedResultsChangeType)type newIndexPath:(NSIndexPath *)newIndexPath
     {   
         UITableView *tableView = self.tableView;
    
         switch(type) {
                
             case NSFetchedResultsChangeInsert:
                 [tableView insertRowsAtIndexPaths:[NSArray arrayWithObject:newIndexPath] withRowAnimation:UITableViewRowAnimationFade];
                 break;
                
             case NSFetchedResultsChangeDelete:
                 [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
                 break;
                
             case NSFetchedResultsChangeUpdate:
                 [self configureCell:[tableView cellForRowAtIndexPath:indexPath] atIndexPath:indexPath];
                 break;
                
             case NSFetchedResultsChangeMove:
                 [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
                 [tableView insertRowsAtIndexPaths:[NSArray arrayWithObject:newIndexPath] withRowAnimation:UITableViewRowAnimationFade];
                 break;
         }
     }
    
    
     - (void)controller:(NSFetchedResultsController *)controller didChangeSection:(id <NSFetchedResultsSectionInfo>)sectionInfo atIndex:(NSUInteger)sectionIndex forChangeType:(NSFetchedResultsChangeType)type
     {   
         switch(type) {
                
             case NSFetchedResultsChangeInsert:
                 [self.tableView insertSections:[NSIndexSet indexSetWithIndex:sectionIndex] withRowAnimation:UITableViewRowAnimationFade];
                 break;
                
             case NSFetchedResultsChangeDelete:
                 [self.tableView deleteSections:[NSIndexSet indexSetWithIndex:sectionIndex] withRowAnimation:UITableViewRowAnimationFade];
                 break;
         }
     }
    
     - (void)controllerDidChangeContent:(NSFetchedResultsController *)controller
     {
         // The fetch controller has sent all current change notifications, so tell the table view to process all updates.
         [self.tableView endUpdates];
     }
